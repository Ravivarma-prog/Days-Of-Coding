Given two strings s and t, return true if s is a subsequence of t, or false otherwise.
A subsequence of a string is a new string that is formed from the original string by deleting some (can be none)
of the characters without disturbing the relative positions of the remaining characters. (i.e., "ace" is a subsequence of "abcde" while "aec" is not).

Approach : Two pointer approach. If the characters match then move both pointers else move only the pointer of main string

Time Complexity : O(N)
Space Complexity : O(1)

link : https://leetcode.com/problems/is-subsequence/

Code :

class Solution {
public:
    bool isSubsequence(string s, string t) {
        int n = s.length() , m = t.length();
        
        int i = 0 , j = 0 ; // i is a pointer for string s and j for string t
        
        if(n > m)
            return false;
        
        while(j < m && i < n)
        {
            if(s[i] == t[j])
            {
                i++;
                j++;
            }
            else
            {
                j++;
            }
        }
        
        return i>=n;
        
    }
};
