Given two sorted arrays nums1 and nums2 of size m and n respectively, return the median of the two sorted arrays.

The overall run time complexity should be O(log (m+n)).

 link : https://leetcode.com/problems/median-of-two-sorted-arrays/
 
 Code :
 
 class Solution {
public:
    double findMedianSortedArrays(vector<int>& nums1, vector<int>& nums2) {
        
        int n = nums1.size() , m = nums2.size();
        
        if(n > m)
            return findMedianSortedArrays(nums2 , nums1);
        
        int left = 0 , right = n;
        int xp , yp;
        
        while(left <= right)
        {
            xp = left + (right-left)/2;
            yp = (n+m+1)/2 - xp;
            
            int fl = (xp == 0) ? INT_MIN : nums1[xp-1];
            int fr = (xp == n) ? INT_MAX : nums1[xp];
            
            int sl = (yp == 0) ? INT_MIN : nums2[yp-1];
            int sr = (yp == m) ? INT_MAX : nums2[yp];
            
            if(fl <= sr && sl <= fr)
            {
                if((n+m)%2 == 1)
                    return max(fl , sl);
                else
                    return (max(fl,sl) + min(fr,sr))/2.0;
            }
            
            
            if(fl > sr)
            {
                right = xp-1;
            }
            
            else if (sl > fr)
            {
                left = xp+1;
            }
            
        }
        
        return -1;
        
    }
};
