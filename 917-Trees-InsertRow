Given the root of a binary tree and two integers val and depth, add a row of nodes with value val at the given depth depth.

Note that the root node is at depth 1.

link : https://leetcode.com/problems/add-one-row-to-tree/

Code : 

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    TreeNode* addOneRow(TreeNode* root, int val, int depth) {
        if(depth == 1)
        {
            TreeNode* r = new TreeNode(val);
            r->left = root;
            return r;
        }
       
        queue<TreeNode * > q;
        q.push(root);
        
        int l = 1;
        
        while(!q.empty())
        {
            int n = q.size();
            
            
            while(n--)
            {
                TreeNode * curr = q.front();
                q.pop();
            
                if(curr->left)
                    q.push(curr->left);
                if(curr->right)
                    q.push(curr->right);
                
                if(l == depth-1)
                {
                    TreeNode * ls = new TreeNode(val);
                    TreeNode * rs = new TreeNode(val);
                    
                    ls->left = curr->left;
                    rs->right = curr->right;
                    
                    curr->left = ls;
                    curr->right = rs;
                    
                }
                
            }
            
            if(l == depth-1)
                break;
            
            l++;
        }
        
        return root;
    
    }
};
