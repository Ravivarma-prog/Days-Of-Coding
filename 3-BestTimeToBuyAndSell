You are given an array prices where prices[i] is the price of a given stock on the ith day.
You want to maximize your profit by choosing a single day to buy one stock and choosing a different day in the future to sell that stock.
Return the maximum profit you can achieve from this transaction. If you cannot achieve any profit, return 0.

link : https://leetcode.com/problems/best-time-to-buy-and-sell-stock/

Approach : 

We calculate the minimum of the stocks till the present day. Find the max between the current max and the profit of the day(present day cost - minimum stock) 

Code : 

class Solution {
public:
    int maxProfit(vector<int>& prices) {
        int n = prices.size();
        
        int mn = prices[0] , mx = 0;
        
        for(int i = 1 ; i <n ; i++)
        {
            mn = min(prices[i] , mn);
            mx = max(mx , prices[i]-mn);
        }
        return mx;
    }
};
