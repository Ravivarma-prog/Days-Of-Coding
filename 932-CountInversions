Given an array of integers. Find the Inversion Count in the array. 

link : https://practice.geeksforgeeks.org/problems/inversion-of-array-1587115620/1#

Code :

// { Driver Code Starts
//Initial Template for C

#include <stdio.h>
#include <stdlib.h>


 // } Driver Code Ends
//User function Template for C


// arr[]: Input Array
// N : Size of the Array arr[]
// Function to count inversions in the array.
// long long int inversions = 0;

long long int merger(long long arr[] , long long lb , long long mid , long long ub)
{
    long long n1 = mid-lb+1;
    long long n2 = ub-mid;
    
    long long int  inversions = 0;
    
    long long L[n1] , R[n2];
    
    for(long long i = 0 ; i < n1 ; i++)
        L[i] = arr[lb+i];
    for(long long i = 0 ; i < n2; i++)
        R[i] = arr[mid+1+i];
        
    long long i = 0 , j =0 , k =lb;
    
    while(i < n1 && j < n2)
    {
        if(L[i] <= R[j])
        {
            arr[k++] = L[i++];
            lb++;
        }
        else if(R[j] < L[i])
        {
            inversions += mid-lb+1;
            arr[k++] = R[j++];
            
            // printf("%d " , inversions);
        }
    }
    
    while(i < n1)
    {
        arr[k++] = L[i++];
    }
    
    while(j < n2)
    {
        arr[k++] = R[j++];
    }
    
    return inversions;
}

long long int countInv(long long arr[] , long long lb , long long ub)
{
    long long int invCount = 0 ;
    if(lb < ub)
    {
        long long mid = (ub+lb)/2;
        invCount += countInv(arr , lb ,mid);
        invCount += countInv(arr , mid+1 ,ub);
        invCount += merger(arr , lb , mid , ub);
    }
    return invCount;
}

long long int inversionCount(long long arr[], long long N)
{
    return countInv(arr , 0 , N-1);
    // for(long long int i = 0 ; i < N ; i++)
    //     printf("%d " , arr[i]);
    // return inversions;
}



// { Driver Code Starts.

int main() {
    
    long long T;
    scanf("%ld", &T);
    
    while(T--){
        long long N;
        scanf("%ld", &N);
        
        long long A[N];
        for(long long i = 0;i<N;i++){
            scanf("%ld", &A[i]);
        }
        
        printf("%ld\n", inversionCount(A,N) );
    }
    
    return 0;
}
  // } Driver Code Ends
