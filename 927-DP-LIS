Given an integer array nums, return the length of the longest strictly increasing subsequence.

A subsequence is a sequence that can be derived from an array by deleting some or no elements without changing the order of the remaining elements
. For example, [3,6,2,7] is a subsequence of the array [0,3,1,6,2,2,7].

link : https://leetcode.com/problems/longest-increasing-subsequence/

Code : 

class Solution {
public:
    int lengthOfLIS(vector<int>& nums) {
        int n = nums.size();
        vector<int> maxSeq(n,1);
        
        for(int i = 1 ; i < n ; i++)
        {
            for(int j = 0 ; j < i ; j++)
            {
                if(nums[i] > nums[j])
                {
                    maxSeq[i] = max(maxSeq[j]+1 , maxSeq[i]);
                }
            }
        }
        
        int mx = 0;
        for(int i : maxSeq)
            mx = max(mx , i);
            
        return mx;
        
    }
};
