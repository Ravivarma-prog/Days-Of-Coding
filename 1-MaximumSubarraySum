This is a dynammic programming problem for which i used kadane algorithm.

https://leetcode.com/problems/maximum-subarray/submissions/

Code:

class Solution {
public:
    int maxSubArray(vector<int>& nums) {
        int currSum = nums[0] , prevSum = nums[0];
        
        for(int i = 1 ; i < nums.size();i++)
        {
            currSum = max(nums[i] , currSum+nums[i]);
            prevSum = max(currSum , prevSum);
        }
        
        return prevSum;
    }
};
