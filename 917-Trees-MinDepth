Given a binary tree, find its minimum depth.

link : https://leetcode.com/problems/minimum-depth-of-binary-tree/

Code :

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int minDepth(TreeNode* root) {
        if(root==NULL)
            return 0;
        
        if(root->left == NULL && root->right == NULL)
            return 1;
        
       int ls = INT_MAX-1  , rs = INT_MAX-1;
        
        if(root->left)
        {
            ls = 1+minDepth(root->left);
        }
        
        if(root->right)
        {
            rs = 1+minDepth(root->right);
        }
    
        
        return min(ls,rs);
        
    }
};
