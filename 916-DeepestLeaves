Given the root of a binary tree, return the sum of values of its deepest leaves.

Link : https://leetcode.com/problems/deepest-leaves-sum/

Code :

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int deepestLeavesSum(TreeNode* root) {
        queue<TreeNode * > q;
        
        q.push(root);
        
        int sum;
        
        while(!q.empty())
        {
            int n = q.size();
            sum = 0;
            while(n--)
            {
                TreeNode * curr = q.front();
                q.pop();
                
                if(curr->left)
                    q.push(curr->left);
                if(curr->right)
                    q.push(curr->right);
                
                sum+=curr->val;
            }
        }
        
        return sum;
    }
};
