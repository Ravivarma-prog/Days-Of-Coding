Given a set of n elements, find number of ways of partitioning it.

Code :

#include<bits/stdc++.h>

/*
This uses a concept of bells numbers

The dp equation is dp[i][j] = dp[i-1][j-1]  if j==0;            
							  dp[i][j-1]+dp[i-1][j-1] otherwise 

*/

using namespace std;

int main(){
	int n;
	cin >> n;
	
	int dp[n][n];
	
	dp[0][0] = 1;
	
	for(int i = 1 ; i < n ; i++)
	{
		for(int j = 0 ; j <= i ; j++)
		{
			if(j==0)
				dp[i][j] = dp[i-1][i-1];
				
			else
				dp[i][j] = dp[i][j-1]+dp[i-1][j-1];
		}
	}
	
	for(int i = 0 ; i < n ; i++)
	{
		for(int j = 0 ; j <= i ; j++)
		{
			cout << dp[i][j] << " ";
		}
		cout << endl;
	}
	
	cout << dp[n-1][n-1];
	
}
