Given two integer arrays inorder and postorder where inorder is the inorder traversal of a binary tree and postorder is the postorder traversal of the same tree, 
construct and return the binary tree.

link : https://leetcode.com/problems/construct-binary-tree-from-inorder-and-postorder-traversal/

Code :

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
    
    TreeNode * build(vector<int> in , vector<int> post , int &a , int start , int end)
    {
        if(a < 0)
            return NULL;
        
        
        if(start > end)
            return NULL;
        
        int val = post[a];
        TreeNode * temp = new TreeNode(post[a--]);
        
        
        if(start == end)
            return temp;
        
        int ind;
        
        for(int i = end ; i >= start ; i--)
        {
            if(in[i] == val)
            {
                ind = i;
                break;
            }
        }
        
        temp->right = build(in , post , a , ind+1 , end);
        temp->left = build(in , post , a , start , ind-1);
        
         return temp;
        
    }
    
public:
    TreeNode* buildTree(vector<int>& inorder, vector<int>& postorder) {
        int n = postorder.size();
        int k = n-1;
        
        TreeNode * root = build(inorder , postorder , k , 0 , n-1);
        
        return root;
    }
};
