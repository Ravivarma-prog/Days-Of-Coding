You are given the head of a singly linked-list. The list can be represented as:

L0 → L1 → … → Ln - 1 → Ln
Reorder the list to be on the following form:

L0 → Ln → L1 → Ln - 1 → L2 → Ln - 2 → …
You may not modify the values in the list's nodes. Only nodes themselves may be changed.

link : https://leetcode.com/problems/reorder-list/

Code :

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */


class Solution {
public:
    void reorderList(ListNode* head) {
        deque<ListNode *> q;
        
        ListNode * temp = head;
        int dir = 0;
        
        while(temp)
        {
            q.push_back(temp);
            temp = temp->next;
        }
        
        q.pop_front();
        temp = head;
        
        while(!q.empty())
        {
            if(dir == 0)
            {
                temp->next = q.back();
                temp = q.back();
                q.pop_back();
                dir = 1;
            }
            
            else
            {
                temp->next = q.front();
                temp = q.front();
                q.pop_front();
                dir=0;
            }
        }
        
        temp->next =  NULL;
        
    }
};
