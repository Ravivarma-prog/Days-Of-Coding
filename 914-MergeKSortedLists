You are given an array of k linked-lists lists, each linked-list is sorted in ascending order.

Merge all the linked-lists into one sorted linked-list and return it

link : https://leetcode.com/problems/merge-k-sorted-lists/

Code :

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
    
    ListNode * merge(ListNode * a , ListNode * b)
    {
        if(a == NULL)
            return b;
        if(b == NULL)
            return a;
        
        if(a->val < b->val)
        {
            a->next = merge(a->next , b);
            return a;
        }
        
        b->next = merge(a  , b->next);
        return b;
        
    }
    
public:
    ListNode* mergeKLists(vector<ListNode*>& lists) {
        int k = lists.size();
        
        if(k==0)
            return NULL;
        
        if(k==1)
            return lists[0];
        
        ListNode * head = lists[0];
        
        for(int i = 1 ; i < k ; i++)
        {
            head = merge(head , lists[i]);
        }
        
        return head;
    }
};
